The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
>>> m = __import__("2-matrix_divided").__doc__
>>> len(m) > 1
True

Checking for function docstring:
>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
>>> len(f) > 1
True

Checking for regular matrix and div:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Checking for ZeroDivisionError:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Checking for div TypeError:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "a")
Traceback (most recent call last):
...
TypeError: div must be a number

Checking for matrix (list of lists) TypeError:
>>> matrix_divided(["matrix TypeError", [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for matrix integers/floats TypeError:
>>> matrix_divided([[1, 2, 'a'], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for matrix integers/floats TypeError:
>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size